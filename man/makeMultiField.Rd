% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/makeMultiField.R
\name{makeMultiField}
\alias{makeMultiField}
\title{Multifield constructor}
\usage{
makeMultiField(..., spatial.tolerance = 0.001)
}
\arguments{
\item{...}{Input fields to form the multifield. These must be compatible in time and space (see details).}

\item{spatial.tolerance}{numeric. Coordinate differences smaller than \code{spatial.tolerance} will be considered equal
coordinates. Default to 0.001 --assuming that degrees are being used it seems a reasonable rounding error after interpolation--.
This value is passed to the \code{\link{identical}} function to check for spatial consistency of the input fields.}
}
\value{
A (multimember) multifield object encompassing the different input (multimember) fields
}
\description{
Constructs a (possibly multimember) multifield from different (multimember) fields.
A multifield can be considered a \dQuote{stack} of fields with similar spatiotemporal extents,
 useful to handle sets of predictors as a single block.
}
\details{
The function makes a number of checks in order to test the spatiotemporal compatibility of the input multi-member fields.
 Regarding the temporal concordance, it is implicitly assumed that all temporal data from the different
 multimember fields correspond to the same time zone ("GMT"). The time zone itself is not important, as long as it is the
 same across datasets, because temporal consistency is checked on a daily basis (not hourly), allowing the inclusion of
 predictors with different verification times and temporal aggregations. For instance, instantaneous geopotential at 12:00
 is compatible with mean daily surface temperature, always that both variables correspond to the same days. Different time
 resolutions are not compatible and will return an error (for instance, 6-hourly data is incompatible with daily values,
 because their respective time series for a given season have different lengths).

 The spatial consistency of the input fields is also checked. In order to avoid possible errors from the user, the spatial
  consistency (i.e., equal XY coordinates) of the input fields must be ensured before attempting the creation of the multifield,
  otherwise giving an error. This can be achieved either through the specification of the same 'lonLim' and 'latLim' argument
  values when loading the fields, or using the \code{\link{interpData}} interpolator in conjuntion with the \code{\link{getGrid}}
  method.
}
\note{
A multifield can not be passed to the interpolator \code{\link{interpData}} directly. Instead, the
multimember fields should be interpolated individually prior to multifield construction.
}
\examples{
# Creation of a multifield from three different fields:
data(iberia_ncep_ta850)
data(iberia_ncep_hus850)
data(iberia_ncep_psl)
# An example of different temporal aggregations, temporally compatible:
# sea-level pressure is a daily mean, while specific humidity and air temperature
# (850 mb surface isobaric pressure level) are instantaneous data verifying at 12:00 UTC:
# air temperature
range(iberia_ncep_ta850$Dates$start)
range(iberia_ncep_ta850$Dates$end) # start and end are identical (instantaneous)
# sea-level pressure
range(iberia_ncep_psl$Dates$start)
range(iberia_ncep_psl$Dates$end) # start and end differ in 24 h (daily mean)
mf <- makeMultiField(iberia_ncep_hus850, iberia_ncep_psl, iberia_ncep_ta850)
# The new object inherits the global attributes from the first field, as it is assumed
# that all input fields come from the same data source:
attributes(mf)
# The data structure has now one additional dimension ("var"), along which the data arrays
# have been binded:
str(mf$Data)
plotMeanField(mf)

# Example of multimember multifield creation from several multimember fields:
# Load three different multimember fields with the same spatiotemporal ranges:
data(tasmax_forecast)
data(tasmin_forecast)
data(tp_forecast)
mm.mf <- makeMultiField(tasmax_forecast, tasmin_forecast, tp_forecast)
# 'plotMeanField' can just handle the multi-member mean for each variable in this case:
plotMeanField(mm.mf)
}
\author{
J. bedia \email{joaquin.bedia@gmail.com}
}
\seealso{
\code{\link{loadGridData}} and \code{\link[ecomsUDG.Raccess]{loadECOMS}} for loading fields (the latter also for loading
multimember fields), \code{\link{loadMultiField}}, which directly loads a multifield. \code{\link{interpData}} and \code{\link{getGrid}}
for spatial consistency of input fields.
}

